// Copyright (c) 2024 Nordic Semiconductor ASA
// SPDX-License-Identifier: Apache-2.0

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include "kb42s-pinctrl.dtsi"

#include <dt-bindings/zmk/matrix_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>


/ {
	compatible = "kb42s";
    model = "KB42S";

	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix-transform = &default_transform;
		zmk,battery = &fuel_gauge0;
        zephyr,display = &sharpdisp;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &code_partition;
	};

	aliases {
		charging-pin = &pmic_charging;
		charging-err-pin = &pmic_err;
	};

	pmic {
		compatible = "gpio-keys";
		pmic_charging: pmic_charging {
			gpios = <&gpio1 0 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			zephyr,code = <INPUT_KEY_0>;
		};
		pmic_err: pmic_err {
			gpios = <&gpio0 25 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			zephyr,code = <INPUT_KEY_1>;
		};
	};

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
                                    RC(3,3) RC(3,4) RC(3,5)  RC(3,6) RC(3,7) RC(3,8)
        >;
    };

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        // wakeup-source;
        row-gpios
        = <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpio1 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        , <&gpio1 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        ;

        col-gpios
        = <&gpio0 29 GPIO_ACTIVE_HIGH> // 0
        , <&gpio0 31 GPIO_ACTIVE_HIGH> // 1
        , <&gpio0 6 GPIO_ACTIVE_HIGH> // 2
        , <&gpio0 8 GPIO_ACTIVE_HIGH> // 3
        , <&gpio1 9 GPIO_ACTIVE_HIGH> // 4
        , <&gpio0 12 GPIO_ACTIVE_HIGH> // 5
        , <&gpio1 4 GPIO_ACTIVE_HIGH> // 6
        , <&gpio1 6 GPIO_ACTIVE_HIGH> // 7
        , <&gpio1 7 GPIO_ACTIVE_HIGH> // 8
        , <&gpio1 11 GPIO_ACTIVE_HIGH> // 9
        , <&gpio1 10 GPIO_ACTIVE_HIGH> // 10
        , <&gpio1 13 GPIO_ACTIVE_HIGH> // 11
        ;
	};

    glidepoint_input {
        compatible = "zmk,input-listener";
        device = <&glidepoint>;

        xy-swap;
        y-invert;
        x-invert;
        scale-multiplier = <3> ;
    };
};

zephyr_udc0: &usbd {
    status = "okay";
};

&i2c1 {
	status = "okay";
	pinctrl-0 = <&i2c1_default>;
	pinctrl-1 = <&i2c1_sleep>;
	pinctrl-names = "default", "sleep";
	fuel_gauge0: max17262@36 {
		compatible = "maxim,max17262";
		reg = <0x36>;
		design-voltage = <4200>;
		desired-voltage = <4200>;
		desired-charging-current = <200>;
		design-cap = <550>;
		empty-voltage = <3300>;
		recovery-voltage = <3880>;
		charge-voltage = <4200>;
		status = "okay";
	};
};

&spi0 {
	compatible = "nordic,nrf-spi";
	status = "okay";
	pinctrl-0 = <&spi0_default>;
	pinctrl-1 = <&spi0_sleep>;
	pinctrl-names = "default", "sleep";
	cs-gpios = < &gpio0 24 GPIO_ACTIVE_HIGH >, < &gpio0 20 GPIO_ACTIVE_LOW >;

	sharpdisp: sharpdisp@0 {
		compatible = "sharp,ls0xx";
		reg = <0>;
		spi-max-frequency = <1000000>;
		width = <128>;
		height = <128>;
	};

    glidepoint: glidepoint@1 {
        compatible = "cirque,pinnacle";
        reg = <1>;
        spi-max-frequency = <1000000>;
        status = "okay";
        dr-gpios = <&gpio0 22 GPIO_ACTIVE_HIGH>;

        sensitivity = "2x";
        sleep;
    };
};

&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            reg = <0x00000000 0x00026000>;
        };
        code_partition: partition@26000 {
            reg = <0x00026000 0x000c6000>;
        };

        /*
         * The flash starting at 0x000ec000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@ec000 {
            reg = <0x000ec000 0x00008000>;
        };

        boot_partition: partition@f4000 {
            reg = <0x000f4000 0x0000c000>;
        };
    };
};


&ieee802154 {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&uicr {
  nfct-pins-as-gpios;
};